{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jalpa\\\\OneDrive\\\\Desktop\\\\FSD\\\\frontend\\\\src\\\\Components\\\\User_Section\\\\Start.js\",\n  _s = $RefreshSig$();\n// YourComponent.js\n\nimport React, { useEffect, useState } from 'react';\nimport EventCard from './EventCard';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    user: state.user\n  };\n};\nconst UserEvents = ({\n  user\n}) => {\n  _s();\n  // Dummy data\n  const [eventData, setEventData] = useState([]);\n  const [updatedData, setUpdateEventData] = useState(false);\n  const handleDelete = async eventId => {\n    // Filter out the event with the specified eventId\n    const updatedEvents = eventData.filter(event => event.eventId !== eventId);\n    // Update the state with the new events array\n\n    try {\n      // Construct the URL with the email parameter\n      const response = await fetch(`http://localhost:8080/user/deleteById?eventId=${eventId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }); // <-- Missing closing parenthesis here\n      const data = await response.json();\n\n      // Log the data structure\n      console.log('Deleted The Given EventDetails:', data);\n\n      // Assuming the data is an array of events\n      setEventData(data); // Update this line based on the actual data structure\n    } catch (error) {\n      console.error('Error fetching event data:', error.message);\n    }\n    fetchEventDataFromDatabase();\n  };\n  const fetchEventDataFromDatabase = async () => {\n    try {\n      // Construct the URL with the email parameter\n      const response = await fetch(`http://localhost:8080/api/getEvents?email=${user.email}`);\n      const data = await response.json();\n\n      // Log the data structure\n      console.log('Fetched data:', data);\n\n      // Assuming the data is an array of events\n      setEventData(data); // Update this line based on the actual data structure\n    } catch (error) {\n      console.error('Error fetching event data:', error.message);\n    }\n  };\n  useEffect(() => {\n    // Fetch event data when the component mounts\n    fetchEventDataFromDatabase();\n  }, []); // Add user.email as a dependency to useEffect\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      flexDirection: 'column'\n    },\n    children: eventData && eventData.map(event => /*#__PURE__*/_jsxDEV(EventCard, {\n      ...event,\n      onDelete: handleDelete\n    }, event.eventId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(UserEvents, \"GaAZ3MUaMZDmfGFlvEX8ZzmKbbc=\");\n_c = UserEvents;\nexport default connect(mapStateToProps)(UserEvents);\nvar _c;\n$RefreshReg$(_c, \"UserEvents\");","map":{"version":3,"names":["React","useEffect","useState","EventCard","connect","jsxDEV","_jsxDEV","mapStateToProps","state","console","log","user","UserEvents","_s","eventData","setEventData","updatedData","setUpdateEventData","handleDelete","eventId","updatedEvents","filter","event","response","fetch","method","headers","data","json","error","message","fetchEventDataFromDatabase","email","style","display","justifyContent","alignContent","flexDirection","children","map","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jalpa/OneDrive/Desktop/FSD/frontend/src/Components/User_Section/Start.js"],"sourcesContent":["// YourComponent.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport EventCard from './EventCard';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\n\r\n\r\nconst UserEvents = ({ user }) => {\r\n  // Dummy data\r\n  const [eventData, setEventData] = useState([]);\r\n  const [updatedData,setUpdateEventData]=useState(false);\r\n\r\n  const handleDelete = async (eventId) => {\r\n    // Filter out the event with the specified eventId\r\n    const updatedEvents = eventData.filter((event) => event.eventId !== eventId);\r\n    // Update the state with the new events array\r\n  \r\n    try {\r\n      // Construct the URL with the email parameter\r\n      const response = await fetch(`http://localhost:8080/user/deleteById?eventId=${eventId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }); // <-- Missing closing parenthesis here\r\n      const data = await response.json();\r\n  \r\n      // Log the data structure\r\n      console.log('Deleted The Given EventDetails:', data);\r\n  \r\n      // Assuming the data is an array of events\r\n      setEventData(data); // Update this line based on the actual data structure\r\n    } catch (error) {\r\n      console.error('Error fetching event data:', error.message);\r\n    }\r\n  \r\n    fetchEventDataFromDatabase();\r\n  };\r\n  \r\n\r\n  const fetchEventDataFromDatabase = async () => {\r\n    try {\r\n      // Construct the URL with the email parameter\r\n      const response = await fetch(`http://localhost:8080/api/getEvents?email=${user.email}`);\r\n      const data = await response.json();\r\n\r\n      // Log the data structure\r\n      console.log('Fetched data:', data);\r\n\r\n      // Assuming the data is an array of events\r\n      setEventData(data); // Update this line based on the actual data structure\r\n    } catch (error) {\r\n      console.error('Error fetching event data:', error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch event data when the component mounts\r\n    fetchEventDataFromDatabase();\r\n  }, []); // Add user.email as a dependency to useEffect\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignContent: 'center', flexDirection: 'column' }}>\r\n    {eventData && eventData.map((event) => (\r\n      <EventCard key={event.eventId} {...event} onDelete={handleDelete} />\r\n    ))}\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserEvents);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}